module sys.types
{
// Some standard types

struct Pair<T1,T2>
{
    T1 v1;
    T2 v2;
};

union Either<T1,T2>
{
    T1 left;
    T2 right;
};

union Maybe<T>
{
    Void nothing;
    T just;
};

union Error<T>
{
    T value;
    String error;
};

union Result<T, E> {
    T ok;
    E error;
};

struct MapEntry<K,V>
{
    @SerializedName "k"
    K key;

    @SerializedName "v"
    V value;
};

// TODO: update to be  Vector<Pair<K,V>>;
newtype Map<K,V> = Vector<Pair<K,V>>;

newtype Set<T> = Vector<T>;

};
