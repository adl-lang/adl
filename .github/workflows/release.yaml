name: New release
on:
  push:
    tags:
      - v[0-9]*

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - name: Setup Stack
        uses: timbod7/setup-stack@1f68f27c99094a718fe60a2790550aafd042f729

      - name: Clone project
        uses: actions/checkout@v2
        # Fetch all history so git describe works
      - run: |
          git fetch --prune --unshallow

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-2-${{ hashFiles('haskell/stack.yaml') }}
          restore-keys: |
            ${{ runner.os }}-2

      - name: Build compiler and generate zip
        run: "cd haskell; stack build adl-compiler; ./tools/make-dist.hs"

      - name: Upload dist directory artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-${{ runner.os }}
          path: dist

  release:
    name: Create Github Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:

    - name: Determine version
      id: version
      run: "echo ::set-output name=version::${GITHUB_REF:11}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
     
    - name: Fetch macOS build
      uses: actions/download-artifact@v1
      with:
        name: dist-macOS
        path: dist-macOS

    - name: Fetch linux build
      uses: actions/download-artifact@v1
      with:
        name: dist-linux
        path: dist-linux

    - name: Upload macOS build
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-macOS/adl-bindist.zip
        asset_name: adl-bindist-${{ steps.version.outputs.version }}-osx.zip
        asset_content_type: application/zip

    - name: Upload linux build
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-linux/adl-bindist.zip
        asset_name: adl-bindist-${{ steps.version.outputs.version }}-linux.zip
        asset_content_type: application/zip
